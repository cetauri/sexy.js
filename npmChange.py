#! #!/usr/bin/python3__author__ = 'cetauri'import osimport jsonfrom io import StringIOimport redef configLoad():    """    환경 설정 로드    """    content = open("sexy.json").read()    stringIO = StringIO(content)    return json.load(stringIO)def main():    globalConfig = configLoad()    suffix = globalConfig["suffix"]    libs = globalConfig["libs"]    globalVars = globalConfig["global"]["list"]    express = '(?<=require\(["\'])(' + "|".join(libs) + '?)(?=["\']\))'    regexp = re.compile(express)    count = 0    for root, dirs, files in os.walk("/home/cetauri/project/sputnik"):        for file in files:            if file.endswith(".js"):                jsFile = root + "/" + file                # print(jsFile)                try:                    jsSource = open(jsFile).read()                    if regexp.search(jsSource):                        freq = len(regexp.findall(jsSource))                        count += freq                        if not jsSource.__contains__(libs[0]+suffix):                            jsSource = re.sub(express, "\\1" + suffix, jsSource)                            # output = open(jsFile, "w")                            # output.write(source)                            # output.close()                    # __filename, __dirname replace                    for _var in globalVars:                        if jsFile.endswith("src/node.js"):                            continue                        replaceVar = _var + suffix                        if not jsSource.__contains__(replaceVar):                            jsSource = jsSource.replace(_var, replaceVar)                            # print(jsFile)                    output = open(jsFile, "w")                    output.write(jsSource)                    output.close()                except UnicodeDecodeError as e:                    if file != "parser-high-byte-character.js":                        assert str(e) == "", str(e) + " (" + jsFile + ")"                except BaseException as e:                    print(str(e))                    assert str(e) == "", "Unknown Exception"if __name__ == '__main__':    main()